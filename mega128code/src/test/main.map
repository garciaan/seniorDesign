Archive member included to satisfy reference by file (symbol)

/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(addsf3.o)
                              ../../lib/pressuresensor/pressuresensor.o (__subsf3)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(addsf3x.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(addsf3.o) (__addsf3x)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(atan2.o)
                              ../../lib/magnometer/magnometer.o (atan2)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(atan.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(atan2.o) (atan)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(cmpsf2.o)
                              ../../lib/motors/motors.o (__ltsf2)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(divsf3.o)
                              ../../lib/motors/motors.o (__divsf3)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(divsf3x.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(divsf3.o) (__divsf3x)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fixsfsi.o)
                              main.o (__fixsfsi)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fixunssfsi.o)
                              ../../lib/motors/motors.o (__fixunssfsi)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(floatsisf.o)
                              ../../lib/motors/motors.o (__floatunsisf)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_cmp.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(cmpsf2.o) (__fp_cmp)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_inf.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(addsf3x.o) (__fp_inf)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_nan.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(addsf3x.o) (__fp_nan)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_powser.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(atan.o) (__fp_powser)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_pscA.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(addsf3x.o) (__fp_pscA)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_pscB.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(addsf3x.o) (__fp_pscB)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_round.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(addsf3.o) (__fp_round)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_split3.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(addsf3x.o) (__fp_split3)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_zero.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(addsf3x.o) (__fp_zero)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(gesf2.o)
                              ../../lib/motors/motors.o (__gtsf2)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(inverse.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(atan.o) (inverse)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(mulsf3.o)
                              ../../lib/adc/adc.o (__mulsf3)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(mulsf3x.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(atan.o) (__mulsf3x)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(square.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(atan.o) (square)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_divmodhi4.o)
                              main.o (__divmodhi4)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_exit.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/crtatmega128.o (exit)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_clear_bss.o)
                              ../../lib/pressuresensor/pressuresensor.o (__do_clear_bss)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_udivmodhi4.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
                              main.o (__itoa_ncheck)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libc.a(itoa_ncheck.o) (__utoa_common)
/usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libc.a(strrev.o)
                              /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libc.a(utoa_ncheck.o) (strrev)

Allocating common symbols
Common symbol       size              file

PSENSOR_MIN         0x4               ../../lib/pressuresensor/pressuresensor.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/crtatmega128.o
LOAD main.o
LOAD ../../lib/I2C-master-lib/i2c_master.o
LOAD ../../lib/adc/adc.o
LOAD ../../lib/lcd/lcd.o
LOAD ../../lib/uart/uart.o
LOAD ../../lib/motors/motors.o
LOAD ../../lib/magnometer/magnometer.o
LOAD ../../lib/lasersensor/lasersensor.o
LOAD ../../lib/pressuresensor/pressuresensor.o
LOAD /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a
START GROUP
LOAD /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a
LOAD /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a
LOAD /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libc.a
LOAD /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libatmega128.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x15a6
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/crtatmega128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_fplib
                0x000000000000008c       0x2d /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(atan.o)
                0x00000000000000ba                . = ALIGN (0x2)
 *fill*         0x00000000000000b9        0x1 
                0x00000000000000ba                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000ba        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000ba                __trampolines_end = .
 *(.progmem*)
                0x00000000000000ba                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000ba                __ctors_start = .
 *(.ctors)
                0x00000000000000ba                __ctors_end = .
                0x00000000000000ba                __dtors_start = .
 *(.dtors)
                0x00000000000000ba                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000ba        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/crtatmega128.o
                0x00000000000000ba                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000ba        0xc /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/crtatmega128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000c6       0x1a /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_copy_data.o)
                0x00000000000000c6                __do_copy_data
 .init4         0x00000000000000e0       0x10 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_clear_bss.o)
                0x00000000000000e0                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000f0        0x8 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/crtatmega128.o
 *(.init9)
 *(.text)
 .text          0x00000000000000f8        0x4 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/crtatmega128.o
                0x00000000000000f8                __vector_20
                0x00000000000000f8                __vector_28
                0x00000000000000f8                __vector_1
                0x00000000000000f8                __vector_32
                0x00000000000000f8                __vector_34
                0x00000000000000f8                __vector_24
                0x00000000000000f8                __vector_12
                0x00000000000000f8                __bad_interrupt
                0x00000000000000f8                __vector_6
                0x00000000000000f8                __vector_31
                0x00000000000000f8                __vector_3
                0x00000000000000f8                __vector_23
                0x00000000000000f8                __vector_30
                0x00000000000000f8                __vector_25
                0x00000000000000f8                __vector_11
                0x00000000000000f8                __vector_13
                0x00000000000000f8                __vector_17
                0x00000000000000f8                __vector_19
                0x00000000000000f8                __vector_7
                0x00000000000000f8                __vector_27
                0x00000000000000f8                __vector_5
                0x00000000000000f8                __vector_33
                0x00000000000000f8                __vector_4
                0x00000000000000f8                __vector_9
                0x00000000000000f8                __vector_2
                0x00000000000000f8                __vector_21
                0x00000000000000f8                __vector_15
                0x00000000000000f8                __vector_29
                0x00000000000000f8                __vector_8
                0x00000000000000f8                __vector_26
                0x00000000000000f8                __vector_14
                0x00000000000000f8                __vector_10
                0x00000000000000f8                __vector_16
                0x00000000000000f8                __vector_18
                0x00000000000000f8                __vector_22
 .text          0x00000000000000fc      0x1e0 main.o
                0x00000000000000fc                path2
                0x00000000000000fe                path3
                0x0000000000000100                turn
                0x00000000000001de                path1
 .text          0x00000000000002dc      0x28e ../../lib/I2C-master-lib/i2c_master.o
                0x00000000000002dc                i2c_init
                0x00000000000002e4                i2c_start
                0x0000000000000328                i2c_write
                0x000000000000034c                i2c_read_ack
                0x0000000000000360                i2c_read_nack
                0x0000000000000374                i2c_transmit
                0x00000000000003d2                i2c_receive
                0x0000000000000442                i2c_writeReg
                0x00000000000004c2                i2c_readReg
                0x0000000000000562                i2c_stop
 .text          0x000000000000056a       0x92 ../../lib/adc/adc.o
                0x000000000000056a                enable_adc
                0x0000000000000586                read_adc
                0x00000000000005d0                get_voltage
 .text          0x00000000000005fc      0x232 ../../lib/lcd/lcd.o
                0x00000000000005fc                strobe_lcd
                0x000000000000060e                clear_display
                0x0000000000000642                home_line2
                0x000000000000066e                char2lcd
                0x000000000000069a                string2lcd
                0x00000000000006f8                spi_init
                0x0000000000000716                lcd_init
 .text          0x000000000000082e      0x1a8 ../../lib/uart/uart.o
                0x000000000000082e                USART1_Init
                0x0000000000000856                USART1_Transmit
                0x0000000000000864                USART1_send_string
                0x0000000000000882                USART1_Receive
                0x0000000000000890                USART1_Receive_String
                0x00000000000008d8                USART1_flush
                0x0000000000000912                USART0_Init
                0x0000000000000936                USART0_Transmit
                0x000000000000093e                USART0_send_string
                0x0000000000000956                USART0_Receive
                0x0000000000000974                USART0_Receive_String
                0x00000000000009ca                USART0_flush
 .text          0x00000000000009d6      0x238 ../../lib/motors/motors.o
                0x00000000000009d6                init_esc
                0x0000000000000a02                set_16bitPWM1
                0x0000000000000a52                init_motors
                0x0000000000000a80                TIM16_WriteTCNT1
                0x0000000000000a90                move
 .text          0x0000000000000c0e      0x120 ../../lib/magnometer/magnometer.o
                0x0000000000000c0e                init_HMC5883L
                0x0000000000000c50                getHeading
 .text          0x0000000000000d2e       0x40 ../../lib/lasersensor/lasersensor.o
                0x0000000000000d2e                get_distance
                0x0000000000000d36                print_distance
                0x0000000000000d3e                enable_laser_sensor
                0x0000000000000d5a                disable_laser_sensor
                0x0000000000000d66                laser_off
                0x0000000000000d6a                laser_on
 .text          0x0000000000000d6e       0xa6 ../../lib/pressuresensor/pressuresensor.o
                0x0000000000000d6e                calibrate_pressure_sensor
                0x0000000000000d88                get_depth_mpa
                0x0000000000000e02                get_depth_feet
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(addsf3.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(addsf3x.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(atan2.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(atan.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(cmpsf2.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(divsf3.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(divsf3x.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fixsfsi.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fixunssfsi.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(floatsisf.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_cmp.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_inf.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_nan.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_powser.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_pscA.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_pscB.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_round.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_split3.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_zero.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(gesf2.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(inverse.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(mulsf3.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(mulsf3x.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(square.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_exit.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_copy_data.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_clear_bss.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
 .text          0x0000000000000e14        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libc.a(strrev.o)
                0x0000000000000e14                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000e14      0x10e main.o
                0x0000000000000e14                main
 .text.avr-libc.fplib
                0x0000000000000f22        0xe /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(addsf3.o)
                0x0000000000000f22                __subsf3
                0x0000000000000f24                __addsf3
 .text.avr-libc.fplib
                0x0000000000000f30       0xcc /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(addsf3x.o)
                0x0000000000000f52                __addsf3x
 .text.avr-libc.fplib
                0x0000000000000ffc       0x86 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(atan2.o)
                0x0000000000001022                atan2
 .text.avr-libc.fplib
                0x0000000000001082       0x5e /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(atan.o)
                0x0000000000001082                atan
 .text.avr-libc.fplib
                0x00000000000010e0        0xa /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(cmpsf2.o)
                0x00000000000010e0                __lesf2
                0x00000000000010e0                __nesf2
                0x00000000000010e0                __eqsf2
                0x00000000000010e0                __cmpsf2
                0x00000000000010e0                __ltsf2
 .text.avr-libc.fplib
                0x00000000000010ea        0x8 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(divsf3.o)
                0x00000000000010ea                __divsf3
 .text.avr-libc.fplib
                0x00000000000010f2       0xdc /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(divsf3x.o)
                0x0000000000001112                __divsf3x
                0x0000000000001118                __divsf3_pse
 .text.avr-libc.fplib
                0x00000000000011ce        0xe /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fixsfsi.o)
                0x00000000000011ce                __fixsfsi
 .text.avr-libc.fplib
                0x00000000000011dc       0x5e /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fixunssfsi.o)
                0x00000000000011dc                __fixunssfsi
 .text.avr-libc.fplib
                0x000000000000123a       0x7a /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(floatsisf.o)
                0x000000000000123a                __floatunsisf
                0x000000000000123e                __floatsisf
 .text.avr-libc.fplib
                0x00000000000012b4       0x48 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_cmp.o)
                0x00000000000012b4                __fp_cmp
 .text.avr-libc.fplib
                0x00000000000012fc        0xc /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_inf.o)
                0x00000000000012fc                __fp_inf
 .text.avr-libc.fplib
                0x0000000000001308        0x6 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_nan.o)
                0x0000000000001308                __fp_nan
 .text.avr-libc.fplib
                0x000000000000130e       0x4e /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_powser.o)
                0x000000000000130e                __fp_powser
 .text.avr-libc.fplib
                0x000000000000135c        0xe /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_pscA.o)
                0x000000000000135c                __fp_pscA
 .text.avr-libc.fplib
                0x000000000000136a        0xe /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_pscB.o)
                0x000000000000136a                __fp_pscB
 .text.avr-libc.fplib
                0x0000000000001378       0x22 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_round.o)
                0x0000000000001378                __fp_round
 .text.avr-libc.fplib
                0x000000000000139a       0x44 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_split3.o)
                0x000000000000139a                __fp_split3
                0x00000000000013aa                __fp_splitA
 .text.avr-libc.fplib
                0x00000000000013de        0xe /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_zero.o)
                0x00000000000013de                __fp_zero
                0x00000000000013e0                __fp_szero
 .text.avr-libc.fplib
                0x00000000000013ec        0xa /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(gesf2.o)
                0x00000000000013ec                __gtsf2
                0x00000000000013ec                __gesf2
 .text.avr-libc.fplib
                0x00000000000013f6       0x10 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(inverse.o)
                0x00000000000013f6                inverse
 .text.avr-libc.fplib
                0x0000000000001406        0x8 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(mulsf3.o)
                0x0000000000001406                __mulsf3
 .text.avr-libc.fplib
                0x000000000000140e       0xd2 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(mulsf3x.o)
                0x000000000000142c                __mulsf3x
                0x0000000000001432                __mulsf3_pse
 .text.avr-libc.fplib
                0x00000000000014e0        0x8 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(square.o)
                0x00000000000014e0                square
 .text.libgcc.mul
                0x00000000000014e8        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x00000000000014e8       0x28 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_divmodhi4.o)
                0x00000000000014e8                __divmodhi4
                0x00000000000014e8                _div
 .text.libgcc   0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000001510        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000001510       0x28 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_udivmodhi4.o)
                0x0000000000001510                __udivmodhi4
 .text.libgcc   0x0000000000001538        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000001538        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000001538        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000001538        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000001538        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.avr-libc
                0x0000000000001538       0x16 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
                0x0000000000001538                __itoa_ncheck
 .text.avr-libc
                0x000000000000154e       0x34 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
                0x000000000000154e                __utoa_ncheck
                0x0000000000001550                __utoa_common
 .text.avr-libc
                0x0000000000001582       0x20 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libc.a(strrev.o)
                0x0000000000001582                strrev
                0x00000000000015a2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000015a2        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_exit.o)
                0x00000000000015a2                exit
                0x00000000000015a2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000015a2        0x4 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000015a6                _etext = .

.data           0x0000000000800100       0x40 load address 0x00000000000015a6
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/crtatmega128.o
 .data          0x0000000000800100        0x0 main.o
 .data          0x0000000000800100        0x0 ../../lib/I2C-master-lib/i2c_master.o
 .data          0x0000000000800100        0x0 ../../lib/adc/adc.o
 .data          0x0000000000800100        0x0 ../../lib/lcd/lcd.o
 .data          0x0000000000800100        0x0 ../../lib/uart/uart.o
 .data          0x0000000000800100        0x0 ../../lib/motors/motors.o
 .data          0x0000000000800100        0x0 ../../lib/magnometer/magnometer.o
 .data          0x0000000000800100        0x0 ../../lib/lasersensor/lasersensor.o
 .data          0x0000000000800100        0x0 ../../lib/pressuresensor/pressuresensor.o
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(addsf3.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(addsf3x.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(atan2.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(atan.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(cmpsf2.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(divsf3.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(divsf3x.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fixsfsi.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fixunssfsi.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(floatsisf.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_cmp.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_inf.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_nan.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_powser.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_pscA.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_pscB.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_round.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_split3.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_zero.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(gesf2.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(inverse.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(mulsf3.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(mulsf3x.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(square.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800100       0x30 main.o
 .rodata.str1.1
                0x0000000000800130        0xf ../../lib/uart/uart.o
 *(.gnu.linkonce.d*)
                0x0000000000800140                . = ALIGN (0x2)
 *fill*         0x000000000080013f        0x1 
                0x0000000000800140                _edata = .
                0x0000000000800140                PROVIDE (__data_end, .)

.bss            0x0000000000800140        0x4
                0x0000000000800140                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/crtatmega128.o
 .bss           0x0000000000800140        0x0 main.o
 .bss           0x0000000000800140        0x0 ../../lib/I2C-master-lib/i2c_master.o
 .bss           0x0000000000800140        0x0 ../../lib/adc/adc.o
 .bss           0x0000000000800140        0x0 ../../lib/lcd/lcd.o
 .bss           0x0000000000800140        0x0 ../../lib/uart/uart.o
 .bss           0x0000000000800140        0x0 ../../lib/motors/motors.o
 .bss           0x0000000000800140        0x0 ../../lib/magnometer/magnometer.o
 .bss           0x0000000000800140        0x0 ../../lib/lasersensor/lasersensor.o
 .bss           0x0000000000800140        0x0 ../../lib/pressuresensor/pressuresensor.o
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(addsf3.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(addsf3x.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(atan2.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(atan.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(cmpsf2.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(divsf3.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(divsf3x.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fixsfsi.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fixunssfsi.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(floatsisf.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_cmp.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_inf.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_nan.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_powser.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_pscA.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_pscB.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_round.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_split3.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(fp_zero.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(gesf2.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(inverse.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(mulsf3.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(mulsf3x.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libm.a(square.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_exit.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_copy_data.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
 .bss           0x0000000000800140        0x0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800140        0x4 ../../lib/pressuresensor/pressuresensor.o
                0x0000000000800140                PSENSOR_MIN
                0x0000000000800144                PROVIDE (__bss_end, .)
                0x00000000000015a6                __data_load_start = LOADADDR (.data)
                0x00000000000015e6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800144        0x0
                0x0000000000800144                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800144                PROVIDE (__noinit_end, .)
                0x0000000000800144                _end = .
                0x0000000000800144                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x46a4
 *(.stab)
 .stab          0x0000000000000000      0xae0 main.o
 .stab          0x0000000000000ae0      0xa44 ../../lib/I2C-master-lib/i2c_master.o
                                        0xc0c (size before relaxing)
 .stab          0x0000000000001524      0x4c8 ../../lib/adc/adc.o
                                        0x690 (size before relaxing)
 .stab          0x00000000000019ec      0x9d8 ../../lib/lcd/lcd.o
                                        0xbc4 (size before relaxing)
 .stab          0x00000000000023c4      0x9b4 ../../lib/uart/uart.o
                                        0xba0 (size before relaxing)
 .stab          0x0000000000002d78      0x744 ../../lib/motors/motors.o
                                        0x9cc (size before relaxing)
 .stab          0x00000000000034bc      0x4a4 ../../lib/magnometer/magnometer.o
                                        0x66c (size before relaxing)
 .stab          0x0000000000003960      0x4b0 ../../lib/lasersensor/lasersensor.o
                                        0x678 (size before relaxing)
 .stab          0x0000000000003e10      0x3f0 ../../lib/pressuresensor/pressuresensor.o
                                        0x5b8 (size before relaxing)
 .stab          0x0000000000004200      0x138 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_divmodhi4.o)
                                        0x144 (size before relaxing)
 .stab          0x0000000000004338       0x6c /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_exit.o)
                                         0x78 (size before relaxing)
 .stab          0x00000000000043a4       0xf0 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_copy_data.o)
                                         0xfc (size before relaxing)
 .stab          0x0000000000004494       0xb4 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_clear_bss.o)
                                         0xc0 (size before relaxing)
 .stab          0x0000000000004548      0x15c /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/avr51/libgcc.a(_udivmodhi4.o)
                                        0x168 (size before relaxing)

.stabstr        0x0000000000000000     0x1a65
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1a65 main.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ../../lib/I2C-master-lib/i2c_master.o
 .comment       0x0000000000000011       0x12 ../../lib/adc/adc.o
 .comment       0x0000000000000011       0x12 ../../lib/lcd/lcd.o
 .comment       0x0000000000000011       0x12 ../../lib/uart/uart.o
 .comment       0x0000000000000011       0x12 ../../lib/motors/motors.o
 .comment       0x0000000000000011       0x12 ../../lib/magnometer/magnometer.o
 .comment       0x0000000000000011       0x12 ../../lib/lasersensor/lasersensor.o
 .comment       0x0000000000000011       0x12 ../../lib/pressuresensor/pressuresensor.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/crtatmega128.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x780
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x780 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/crtatmega128.o

.debug_abbrev   0x0000000000000000      0x718
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x718 /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/crtatmega128.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/crtatmega128.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x27d
 *(.debug_str)
 .debug_str     0x0000000000000000      0x27d /usr/local/Cellar/avr-gcc/6.2.0/lib/gcc/avr/6.2.0/../../../../avr/lib/avr51/crtatmega128.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs
